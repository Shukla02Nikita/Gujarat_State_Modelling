PROPERTY CHANGEtitle
PROPERTY CHANGEdocument-replaced
DOCUMENT REPLACED
PROPERTY CHANGEdocument-replaced
DOCUMENT REPLACED
Going to change controls
About to perform query: collection()/scenario
About to perform query: distinct-values(collection()/scenario/world/*[@type = 'region']/@name)
Didn't find builder for detailed land allocation query going to use defaults
Didn't find builder for land allocation by crop query going to use defaults
Didn't find builder for aggregated land allocation query going to use defaults
Didn't find builder for land allocation in a specified land use region query going to use defaults
Didn't find builder for land allocation by crop and water source query going to use defaults
Didn't find builder for LUC emissions by region query going to use defaults
Didn't find builder for LUC emissions by LUT query going to use defaults
Didn't find builder for LUC emissions by LUT in a specified land use region query going to use defaults
Didn't find builder for vegetative carbon stock by region query going to use defaults
Didn't find builder for profit rate query going to use defaults
Didn't find builder for profit rate in a specified land use region query going to use defaults
Didn't find builder for land leaf shares query going to use defaults
Didn't find builder for land leaf shares in a specified land use region query going to use defaults
About to perform query: collection()/singleQueryListCache/cache[@id=-1235412779]/text()
Time : 7
About to perform query: collection()/singleQueryListCache/cache[@id=593830562]/text()
Time : 1
Before Function: 1715697810312
About to perform query: collection()/scenario[ (@name='speed28in2070' and @date='2024-13-5T11:50:30+05:30') ]/world/region[ (@name='GJ') ]/*[@type='sector' and (@name='transportation' or (exists(child::keyword[@final-energy='transportation'])))]/
               *[@type='subsector']//*[@type='output' (:collapse:) and not(@name='CAFEcredit')]/
               physical-output/node()
In Function: 1715697810313
After build Tree: 1715697810416
After Add table: 1715697810416
About to perform query: collection()/singleQueryListCache/cache[@id=-1394635668]/text()
Time : 2
About to perform query: collection()/singleQueryListCache/cache[@id=-1961143988]/text()
Time : 2
About to perform query: collection()/singleQueryListCache/cache[@id=788658499]/text()
Time : 2
Before Function: 1715697828761
About to perform query: collection()/scenario[ (@name='speed28in2070' and @date='2024-13-5T11:50:30+05:30') ]/world/region[ (@name='GJ') ]/demographics/populationMiniCAM/total-population/node()
In Function: 1715697828762
After build Tree: 1715697828775
After Add table: 1715697828775
Caught the window closing
Doing remove because of control
Doing remove because of control
About to perform query: collection()/singleQueryListCache/cache[@id=1969764723]/text()
Time : 16
Before Function: 1715681369523
About to perform query: collection()/scenario[ (@name='TRN_cal14' and @date='2024-14-5T14:35:09+05:30') ]/world/region[ (@name='GJ') ]/*[@type='sector' and (@name='transportation' or (exists(child::keyword[@final-energy='transportation'])))]/
               *[@type='subsector']/*[@type='technology']/*[@type='input' and not(@name='renewable')]/
               demand-physical[@unit='EJ']/node()
In Function: 1715681369523
After build Tree: 1715681369539
After Add table: 1715681369539
About to perform query: collection()/singleQueryListCache/cache[@id=-945885288]/text()
Time : 0
Before Function: 1715681737762
About to perform query: collection()/scenario[ (@name='TRN_cal14' and @date='2024-14-5T14:35:09+05:30') ]/world/region[ (@name='GJ') ]/*[@type='sector' (:collapse:)]//CO2/emissions/node()
In Function: 1715681737762
After build Tree: 1715681737809
After Add table: 1715681737809
About to perform query: collection()/singleQueryListCache/cache[@id=-310400712]/text()
Time : 0
Before Function: 1715681744788
About to perform query: collection()/scenario[ (@name='TRN_cal14' and @date='2024-14-5T14:35:09+05:30') ]/world/region[ (@name='GJ') ]/*[@type='sector']//CO2/emissions/node()
In Function: 1715681744788
After build Tree: 1715681744803
After Add table: 1715681744803
About to perform query: collection()/singleQueryListCache/cache[@id=-386855504]/text()
Time : 0
Before Function: 1715681805564
About to perform query: collection()/scenario[ (@name='TRN_cal14' and @date='2024-14-5T14:35:09+05:30') ]/world/region[ (@name='GJ') ]/*[@type = 'sector' ]/*[@type='subsector']//CO2/emissions/node()
In Function: 1715681805564
After build Tree: 1715681805581
After Add table: 1715681805581
About to perform query: collection()/singleQueryListCache/cache[@id=1907372754]/text()
Time : 0
Before Function: 1715681809367
About to perform query:  
            declare function local:append-heirarchy($parent as node(), $append as node()*) as node() {
            let $scn := $parent/ancestor::scenario,
            $rgn := $parent (: /ancestor::region :)
            return
            document { element scenario {
            $scn/@*,
            element region {
            $rgn/@*,
            $append
            }
            }
            }
            (: I can get by with just the scenario and region
            let $new_node := element {local-name($parent)} {$parent/@*, $append} 	
            return
            if(local-name($parent) != 'scenario')
            then local:append-heirarchy($parent/parent::*, $new_node)
            else document { $new_node } :)
            }; 
            declare function local:get-carbon-coef($good as xs:string) as xs:decimal {
            let $carbonCoefs := (
            <PrimaryFuelCO2Coef name="biomass">0</PrimaryFuelCO2Coef>,
            <PrimaryFuelCO2Coef name="coal">27.3</PrimaryFuelCO2Coef>,
            <PrimaryFuelCO2Coef name="crude oil">19.6</PrimaryFuelCO2Coef>,
            <PrimaryFuelCO2Coef name="delivered biomass">23</PrimaryFuelCO2Coef>,
            <PrimaryFuelCO2Coef name="delivered coal">27.3</PrimaryFuelCO2Coef>,
            <PrimaryFuelCO2Coef name="delivered gas">14.2</PrimaryFuelCO2Coef>,
            <PrimaryFuelCO2Coef name="gas pipeline">14.2</PrimaryFuelCO2Coef>,
            <PrimaryFuelCO2Coef name="gas processing">14.2</PrimaryFuelCO2Coef>,
            <PrimaryFuelCO2Coef name="limestone">0.08</PrimaryFuelCO2Coef>,
            <PrimaryFuelCO2Coef name="natural gas">14.2</PrimaryFuelCO2Coef>,
            <PrimaryFuelCO2Coef name="refined liquids enduse">19.6</PrimaryFuelCO2Coef>,
            <PrimaryFuelCO2Coef name="refined liquids industrial">19.6</PrimaryFuelCO2Coef>,
            <PrimaryFuelCO2Coef name="refining">19.6</PrimaryFuelCO2Coef>,
            <PrimaryFuelCO2Coef name="regional biomass">23</PrimaryFuelCO2Coef>,
            <PrimaryFuelCO2Coef name="regional biomassOil">19.6</PrimaryFuelCO2Coef>,
            <PrimaryFuelCO2Coef name="regional coal">27.3</PrimaryFuelCO2Coef>,
            <PrimaryFuelCO2Coef name="regional corn for ethanol">19.6</PrimaryFuelCO2Coef>,
            <PrimaryFuelCO2Coef name="regional natural gas">14.2</PrimaryFuelCO2Coef>,
            <PrimaryFuelCO2Coef name="regional oil">19.6</PrimaryFuelCO2Coef>,
            <PrimaryFuelCO2Coef name="regional sugar for ethanol">19.6</PrimaryFuelCO2Coef>,
            <PrimaryFuelCO2Coef name="traded unconventional oil">19.6</PrimaryFuelCO2Coef>,
            <PrimaryFuelCO2Coef name="unconventional oil">21.1</PrimaryFuelCO2Coef>,
            <PrimaryFuelCO2Coef name="unconventional oil production">19.6</PrimaryFuelCO2Coef>,
            <PrimaryFuelCO2Coef name="wholesale gas">14.2</PrimaryFuelCO2Coef>),
            $currCoef := $carbonCoefs[@name=$good]/text()
            return if(exists($currCoef)) then $currCoef else 0.0
            };
            
            
            declare function local:is-carbonatious-fuel($good as xs:string) as xs:boolean {
            not(local:get-carbon-coef($good) = 0.0)
            };
            declare function local:generate-sector-output-coefs($inputNameQueue as xs:string*, $currTree as node(), $coefs as node()*, $is_usa as xs:boolean) as node()* {
            if(empty($inputNameQueue)) then $coefs
            else if( exists($coefs[@name = $inputNameQueue[1]]) or exists(index-of(('traded unconventional oil'),
            $inputNameQueue[1])) or not($currTree/*[@type='sector' and @name=$inputNameQueue[1]]) or not(local:is-carbonatious-fuel($inputNameQueue[1])))
            then 
            local:generate-sector-output-coefs(remove($inputNameQueue, 1), $currTree, $coefs, $is_usa)
            else
            let $inputName := $inputNameQueue[1],
            $newInputNameQueue := remove($inputNameQueue, 1),
            $useInputs := $currTree//*[@type='input' and @name=$inputName],
            $useSectors := distinct-values($useInputs/ancestor::*[@type='sector']/@name),
            $totalInputSum := for $vintage in distinct-values($useInputs/demand-physical/@vintage)
            return element input {
            attribute vintage { $vintage },
            text {
            sum($useInputs/demand-physical[@vintage=$vintage])
            }
            },
            $new_coefs := if(empty($useSectors)) then
            $coefs
            else
            $coefs | element sector {
            attribute name { $inputName },
            for $output in $useSectors
            return element output {
            attribute name { $output },
            for $inputSum in $totalInputSum
            let $currSectorInputs := $useInputs[ancestor::*[@type='sector' and @name=$output]],
            $outputSum := sum($currSectorInputs/demand-physical[@vintage=$inputSum/@vintage]),
            $carbonIn := sum($currSectorInputs/parent::*//carbon-content[@vintage=$inputSum/@vintage]),
            $carbonOut := sum($currSectorInputs/parent::*/output-primary/physical-output[@vintage=$inputSum/@vintage]) *
            local:get-carbon-coef($output)
            return (element share {
            attribute vintage { $inputSum/@vintage },
            text { $outputSum div $inputSum }
            }, element carbon_ratio {
            attribute vintage { $inputSum/@vintage },
            text{ if($carbonIn > 0) then $carbonOut div $carbonIn else 0 }
            })
            }
            }
            return 
            local:generate-sector-output-coefs(distinct-values(($newInputNameQueue, $useSectors)), $currTree, $new_coefs, $is_usa)
            };
            declare function local:apply-coefs($outputName as xs:string, $emissions as node()*, $coefs as node()*) as node()* {
            if(exists($coefs[@name=$outputName]) and abs(sum($emissions)) > 0.001) then
            for $output in $coefs[@name=$outputName]/output
            let $emiss_go := for $year in distinct-values($emissions/@year)
            let $emissThisVintage := $emissions[@year=$year],
            $firstEmiss := $emissThisVintage[1],
            $emissSum := sum($emissThisVintage),
            $shareThisVintage := $output/share[@vintage=$year],
            $carbonRatioThisVintage := $output/carbon_ratio[@vintage=$year],
            $coefThisVintage := $shareThisVintage * $carbonRatioThisVintage
            where $coefThisVintage > 0
            return element { local-name($firstEmiss) } {
            $firstEmiss/@*,
            text{ $emissSum * $coefThisVintage }
            },
            $emiss_stay := for $year in distinct-values($emissions/@year)
            let $emissThisVintage := $emissions[@year=$year],
            $firstEmiss := $emissThisVintage[1],
            $emissSum := sum($emissThisVintage),
            $shareThisVintage := $output/share[@vintage=$year],
            $carbonRatioThisVintage := 1.0 - $output/carbon_ratio[@vintage=$year],
            $coefThisVintage := $shareThisVintage * $carbonRatioThisVintage 
            where $coefThisVintage > 0
            return element { local-name($firstEmiss) } {
            $firstEmiss/@*,
            text{ $emissSum * $coefThisVintage }
            }
            return local:apply-coefs($output/@name, $emiss_go, $coefs) |
            element sector {
            attribute name { $output/@name},
            attribute type { 'sector' },
            $emiss_stay
            }
            else if( abs(sum($emissions)) > 0.001) then
            element sector {
            attribute name { $outputName },
            attribute type { 'sector' },
            $emissions
            }
            else
            (: These are the residuals from chasing simulenaties, I've left this here
            for debuging purposes :)
            element sector {
            attribute name { $outputName },
            attribute type { 'sector' }(:,
            $emissions:)
            }
            };
            declare function local:run-emiss-by-enduse($scenarios as xs:string*, $regions as xs:string*, $collection as xs:string*) as node()* { 	
            (:unordered { :) 	
            let $regionsG := if(not($regions[1] = 'Global'))
            then $regions
            else distinct-values(collection($collection)/scenario/world/*[@type='region']/@name)
            return
            for $scenario in $scenarios, 	    
            $region in $regionsG 	
            let $scenario_split := tokenize($scenario, ' '), 	    
            $currTree := collection($collection)/scenario[@name = $scenario_split[1] and @date = $scenario_split[2]]/world/*[@type='region' and @name=$region],
            $sector_emiss := $currTree/*[@type='sector' and not(@name='regional biomass' or @name='regional biomassOil' or @name='regional corn for ethanol' or @name='regional sugar for ethanol' or @name='regional sugarbeet for ethanol')]//CO2[@type='GHG' (:collapse:) and @name='CO2']/emissions/text(),
            $currEmissSectors := $currTree/*[@type='sector' and (@name='regional biomass' or @name='regional biomassOil' or @name='regional corn for ethanol' or @name='regional sugar for ethanol' or @name='regional sugarbeet for ethanol')],
            $coefs := local:generate-sector-output-coefs(distinct-values($currEmissSectors/@name), $currTree, (), false()),
            $downstream_emiss := for $sectorName in distinct-values($currEmissSectors/@name)
            return local:append-heirarchy($currTree, local:apply-coefs($sectorName, $currEmissSectors[@name=$sectorName]//CO2[@name='CO2']/emissions, $coefs))//text() 
            return ($sector_emiss, $downstream_emiss )
            (:  } :)
            };
            local:run-emiss-by-enduse(('TRN_cal14 2024-14-5T14:35:09+05:30'), ('GJ'), ())
            
         
In Function: 1715681809367
After build Tree: 1715681809429
After Add table: 1715681809429
About to perform query: collection()/singleQueryListCache/cache[@id=-1925590025]/text()
Time : 0
Before Function: 1715681821802
About to perform query: collection()/scenario[ (@name='TRN_cal14' and @date='2024-14-5T14:35:09+05:30') ]/world/region[ (@name='GJ') ]/*[@type = 'sector' ]//CO2/emissions-sequestered/node()
In Function: 1715681821802
After build Tree: 1715681821802
After Add table: 1715681821802
About to perform query: collection()/singleQueryListCache/cache[@id=-1849958245]/text()
Time : 0
About to perform query: collection()/singleQueryListCache/cache[@id=-1066718564]/text()
Time : 0
Before Function: 1715681841929
About to perform query: collection()/scenario[ (@name='TRN_cal14' and @date='2024-14-5T14:35:09+05:30') ]/world/region[ (@name='GJ') ]/*[@type = 'sector' (:collapse:) or @type = 'resource' (:collapse:)](: / *[@type = 'subresource' (: collapse :)] :)//
            *[@type = 'GHG']/emissions/node()
In Function: 1715681841929
After build Tree: 1715681841945
After Add table: 1715681841945
About to perform query: collection()/singleQueryListCache/cache[@id=1942306811]/text()
Time : 0
Before Function: 1715681847229
About to perform query: collection()/scenario[ (@name='TRN_cal14' and @date='2024-14-5T14:35:09+05:30') ]/world/region[ (@name='GJ') ]/*[@type = 'sector']//*[@type = 'GHG']/emissions/node()
In Function: 1715681847229
After build Tree: 1715681847245
After Add table: 1715681847245
About to perform query: collection()/singleQueryListCache/cache[@id=469684938]/text()
Time : 0
Before Function: 1715681865555
About to perform query: collection()/scenario[ (@name='TRN_cal14' and @date='2024-14-5T14:35:09+05:30') ]/world/region[ (@name='GJ') ]/*[@type = 'sector']//*[@type = 'GHG' and (@name='BC')]/emissions/node()
In Function: 1715681865555
Before Function: 1715681867229
About to perform query: collection()/scenario[ (@name='TRN_cal14' and @date='2024-14-5T14:35:09+05:30') ]/world/region[ (@name='GJ') ]/*[@type = 'sector']//*[@type = 'GHG' and (@name='BC')]/emissions/node()
In Function: 1715681867229
New Table: null
My Table: ModelInterface.ModelGUI2.tables.TableSorter@146f6896
Doing remove because of query/table
New Table: null
My Table: ModelInterface.ModelGUI2.tables.TableSorter@4de7cd21
Doing remove because of query/table
New Table: null
My Table: ModelInterface.ModelGUI2.tables.TableSorter@19908391
Doing remove because of query/table
New Table: null
My Table: ModelInterface.ModelGUI2.tables.TableSorter@210a8527
Doing remove because of query/table
